name: Go

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  smoke-testing:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build and install binary
        run: go install ./cmd/cli

      - name: Search for packages
        run: cli search k9s

      - name: Show info about package
        run: cli info k9s

      - name: Install packages one-by-one
        env:
          PM_SYMLINKS_PATH: ./binaries
        run: |
          cli install k9s | grep "installed package 'derailed/k9s'"
          cli install buf | grep "installed package 'bufbuild/buf'"
          cli install kubectx | grep "installed package 'ahmetb/kubectx'"
          cli install minikube | grep "installed package 'kubernetes/minikube'"
          cli install legendary | grep "installed package 'derrod/legendary'"

      - name: Check if packages were installed and linked correctly
        env:
          PM_SYMLINKS_PATH: ./binaries
        run: |
          $PM_SYMLINKS_PATH/k9s version
          $PM_SYMLINKS_PATH/buf --version
          $PM_SYMLINKS_PATH/kubectx --version
          $PM_SYMLINKS_PATH/minikube version
          $PM_SYMLINKS_PATH/legendary --version

      - name: List installed packages
        run: |
          cli list | grep k9s
          cli list | grep buf
          cli list | grep kubectx
          cli list | grep minikube
          cli list | grep legendary

      - name: Uninstall previously installed packages
        run: |
          cli uninstall k9s | grep "uninstalled package 'derailed/k9s'"
          cli uninstall buf | grep "uninstalled package 'bufbuild/buf'"
          cli uninstall kubectx | grep "uninstalled package 'ahmetb/kubectx'"
          cli uninstall minikube | grep "uninstalled package 'kubernetes/minikube'"
          cli uninstall legendary | grep "uninstalled package 'derrod/legendary'"

      - name: Uninstall packages that are not installed
        run: |
          cli uninstall k9s | grep "package 'k9s' isn't installed"
          cli uninstall buf | grep "package 'buf' isn't installed"
          cli uninstall kubectx | grep "package 'kubectx' isn't installed"
          cli uninstall minikube | grep "package 'kubernetes/minikube' isn't installed"
          cli uninstall legendary | grep "package 'legendary' isn't installed"

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build binary
        run: go build ./cmd/cli

      - name: Upload binary
        uses: actions/upload-artifact@v2.2.4
        with:
          name: cli
          path: cli
          if-no-files-found: error
